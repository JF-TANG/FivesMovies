--UTILISATEURS
DROP TABLE IF EXISTS public.Users;

CREATE TABLE public.users
(
    "id_user" SERIAL,
    "username" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "email" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "password" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "register_date" date NOT NULL,
    CONSTRAINT "users_pkey" PRIMARY KEY ("id_user")
)

TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;

--FILMS
DROP TABLE IF EXISTS public.movies;

CREATE TABLE public.movies
(
    "id_movie" SERIAL,
    "title" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "release_date" date,
    "plot" character varying(250) COLLATE pg_catalog."default",
    "poster" bytea,
    "id_user" integer NOT NULL,
    CONSTRAINT "movies_pkey" PRIMARY KEY ("id_movie"),
    CONSTRAINT "id_user" FOREIGN KEY ("id_user")
        REFERENCES public.users ("id_user") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.movies
    OWNER to postgres;

--FAVORIS
DROP TABLE IF EXISTS public.favorites;

CREATE TABLE public.favorites
(
    "id_user" integer NOT NULL,
    "id_movie" integer NOT NULL,
    CONSTRAINT "favorites_pkey" PRIMARY KEY ("id_user", "id_movie"),
    CONSTRAINT "favorites_idMovie_fkey" FOREIGN KEY ("id_movie")
        REFERENCES public.Movies ("id_movie") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "favorites_IdUser_fkey" FOREIGN KEY ("id_user")
        REFERENCES public.users ("id_user") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.favorites
    OWNER to postgres;

--AVIS
DROP TABLE IF EXISTS public.rewiews;

CREATE TABLE public.rewiews
(
    "id_user" integer NOT NULL,
    "id_movie" integer NOT NULL,
    "rating" integer NOT NULL,
    "comment" character varying(250) COLLATE pg_catalog."default",
    "date_review" date NOT NULL,
    CONSTRAINT "rewiews_pkey" PRIMARY KEY ("id_user", "id_movie"),
    CONSTRAINT "id_movie" FOREIGN KEY ("id_movie")
        REFERENCES public.Movies ("id_movie") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT "id_user" FOREIGN KEY ("id_user")
        REFERENCES public.users ("id_user") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.rewiews
    OWNER to postgres;